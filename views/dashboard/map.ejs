<div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">Peta Tracking Pengiriman</h3>
        </div>
        <div class="card-body">
            <div id="map" ></div>
            <script>
                var map;
                function getMap(){
                    var map = new atlas.Map("map", {
                        center: [112.768845,-7.250445],
                        zoom: 10,
                        view: 'Auto',
                        authOptions: {
                            clientId: 'd9c8e327-87ff-4512-bff0-249c5e42769e',
                            authType: 'subscriptionKey',
                            subscriptionKey: 'qy7_3xAjNuuM_DV-kZaTMZoRxuaKUABS1LFJwS5H-sU'
                        }
                    
                    });
                    var pipeline = atlas.service.MapsURL.newPipeline(new atlas.service.MapControlCredential(map));
                    var routeURL = new atlas.service.RouteURL(pipeline);
                    map.events.add('ready',()=>{
                        datasource = new atlas.source.DataSource();
                        map.sources.add(datasource);
                        var startPoint = new atlas.data.Feature(new atlas.data.Point([112.793620,-7.276135]), {
                            title: "PENS",
                            icon: "pin-blue"
                        });

                        var endPoint = new atlas.data.Feature(new atlas.data.Point([112.797865,-7.292004]), {
                            title: "Kontrakan",
                            icon: "pin-blue"
                        });
                        datasource.add([startPoint, endPoint]);
                        map.layers.add(new atlas.layer.LineLayer(datasource, null, {
                            strokeColor: '#2272B9',
                            strokeWidth: 5,
                            lineJoin: 'round',
                            lineCap: 'round'
                        }), 'labels');
                        map.layers.add(new atlas.layer.SymbolLayer(datasource, null, {
                            iconOptions: {
                                image: ['get', 'icon'],
                                allowOverlap: true
                        },
                            textOptions: {
                                textField: ['get', 'title'],
                                offset: [0, 1.2]
                            },
                            filter: ['any', ['==', ['geometry-type'], 'Point'], ['==', ['geometry-type'], 'MultiPoint']] //Only render Point or MultiPoints in this layer.
                        }));
                        var coordinates = [
                            startPoint.geometry.coordinates,
                            endPoint.geometry.coordinates
                        ];

                        //Calculate a route.
                        routeURL.calculateRouteDirections(atlas.service.Aborter.timeout(10000), coordinates).then((directions) => {
                            //Get the route data as GeoJSON and add it to the data source.
                            var data = directions.geojson.getFeatures();
                            datasource.add(data);

                            //Update the map view to center over the route.
                            map.setCamera({
                            bounds: data.bbox,
                            padding: 30 //Add a padding to account for the pixel size of symbols.
                            });
                        });

                    })                                                                                        
                }
                getMap();
                    
            </script>
        </div>
      </div>
    </div>
</div>

